type Account
  @auth(
    delete: { rule: "{$adminSecret: { eq: \"<YOUR ADMIN SECRET HERE>\" } }" },
    add: { rule: "{$adminSecret: { eq: \"<YOUR ADMIN SECRET HERE>\" } }" },
    query: { rule: "{$adminSecret: { eq: \"<YOUR ADMIN SECRET HERE>\" } }" },
    update: { rule: "{$adminSecret: { eq: \"<YOUR ADMIN SECRET HERE>\" } }" }
  ) {
  id: ID
  providerType: String @search(by: [hash])
  providerId: String @search(by: [hash])
  providerAccountId: String @search(by: [hash])
  refreshToken: String
  accessToken: String
  accessTokenExpires: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  user: User @hasInverse(field: "accounts")
}
type Session
  @auth(
    delete: { rule: "{$adminSecret: { eq: \"<YOUR ADMIN SECRET HERE>\" } }" },
    add: { rule: "{$adminSecret: { eq: \"<YOUR ADMIN SECRET HERE>\" } }" },
    query: { rule: "{$adminSecret: { eq: \"<YOUR ADMIN SECRET HERE>\" } }" },
    update: { rule: "{$adminSecret: { eq: \"<YOUR ADMIN SECRET HERE>\" } }" }
  ) {
  id: ID
  expires: DateTime
  sessionToken: String @search(by: [hash])
  accessToken: String
  createdAt: DateTime
  updatedAt: DateTime
  user: User @hasInverse(field: "sessions")
}
type User
  @auth(
    query: {
      or: [
        {
          rule: """
          query ($userId: String!) {queryUser(filter: { id: { eq: $userId } } ) {id}}
          """
        },
        { rule: "{$adminSecret: { eq: \"<YOUR ADMIN SECRET HERE>\" } }" }
      ]
    },
    delete: { rule: "{$adminSecret: { eq: \"<YOUR ADMIN SECRET HERE>\" } }" },
    add: { rule: "{$adminSecret: { eq: \"<YOUR ADMIN SECRET HERE>\" } }" },
    update: {
      or: [
        {
          rule: """
          query ($userId: String!) {queryUser(filter: { id: { eq: $userId } } ) {id}}
          """
        },
        { rule: "{$adminSecret: { eq: \"<YOUR ADMIN SECRET HERE>\" } }" }
      ]
    }
  ) {
  id: ID
  name: String
  email: String @search(by: [hash])
  emailVerified: DateTime
  image: String
  createdAt: DateTime
  updatedAt: DateTime
  accounts: [Account] @hasInverse(field: "user")
  sessions: [Session] @hasInverse(field: "user")
}

type VerificationRequest
  @auth(
    delete: { rule: "{$adminSecret: { eq: \"<YOUR ADMIN SECRET HERE>\" } }" },
    add: { rule: "{$adminSecret: { eq: \"<YOUR ADMIN SECRET HERE>\" } }" },
    query: { rule: "{$adminSecret: { eq: \"<YOUR ADMIN SECRET HERE>\" } }" },
    update: { rule: "{$adminSecret: { eq: \"<YOUR ADMIN SECRET HERE>\" } }" }
  ) {
  id: ID
  identifier: String @search(by: [hash])
  token: String @search(by: [hash])
  expires: DateTime
  createdAt: DateTime
  updatedAt: DateTime
}

# Dgraph.Authorization {"VerificationKey":"<YOUR JWT SECRET HERE>","Header":"<YOUR AUTH HEADER HERE>","Namespace":"YOUR CUSTOM NAMESPACE HERE","Algo":"HS256"}
